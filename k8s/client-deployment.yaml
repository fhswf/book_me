apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: /home/cgawron/bin/kompose convert
    kompose.version: 1.26.0 (40646f47)
    traefik.enable: "true"
    traefik.http.routers.bookme_client.entrypoints: web,websecure
    traefik.http.routers.bookme_client.rule: PathPrefix(`/bookme`)
  creationTimestamp: null
  labels:
    io.kompose.service: client
  name: client
  namespace: bookme
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: client
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: /home/cgawron/bin/kompose convert
        kompose.version: 1.26.0 (40646f47)
        traefik.enable: "true"
        traefik.http.routers.bookme_client.entrypoints: web,websecure
        traefik.http.routers.bookme_client.rule: PathPrefix(`/bookme`)
      creationTimestamp: null
      labels:
        io.kompose.network/traefik: "true"
        io.kompose.service: client
    spec:
      containers:
        - env:
            - name: API_URL
              valueFrom:
                configMapKeyRef:
                  key: API_URL
                  name: docker-env
            - name: CLIENT_URL
              valueFrom:
                configMapKeyRef:
                  key: CLIENT_URL
                  name: docker-env
            - name: MONGO_URI
              valueFrom:
                configMapKeyRef:
                  key: MONGO_URI
                  name: docker-env
            - name: TZ
              valueFrom:
                configMapKeyRef:
                  key: TZ
                  name: docker-env
          image: client
          name: client
          ports:
            - containerPort: 80
          resources: {}
      restartPolicy: Always
status: {}
